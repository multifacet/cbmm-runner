# -*- mode: ruby -*-
# vi: set ft=ruby :

# Various configurations that should be set before instantiating a VM.
vagrant_vm_name = :test_vm
vagrant_box = ''
vagrant_vcpus = 1
vagrant_vmem_gb = 20
vagrant_dir = ''
vm_shared_dir = ''
zerosim_workspace_dir = ''
iface = ''

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  config.vm.provider :libvirt do |libvirt|
    # provider
    libvirt.driver = "kvm"
    libvirt.video_type = "cirrus"

    # machine
    libvirt.cpus = vagrant_vcpus
    libvirt.memory = vagrant_vmem_gb * 1024 # MB

    # HACK: libvirt has no way to specify phys-bits, so we just force it to
    # pass QEMU the -cpu flag twice. QEMU happens to take the second one.
    libvirt.qemuargs :value => '-cpu'
    libvirt.qemuargs :value => 'Skylake-Client,phys-bits=48'
  end

  config.vm.define vagrant_vm_name do |test_vm|
    # Guest OS distribution
    test_vm.vm.box = vagrant_box

    # Make sure the guest can connect to the host network
    config.vm.network :public_network,
        :bridge => iface,
        :dev => iface

    # Forward host port 5555 to guest SSH port so we can ssh -p 5555 vagrant@localhost
    config.vm.network :forwarded_port,
        :guest => 22,
        :host => 5555,
        :host_ip => "0.0.0.0"

    # Shared folders via NFS
    config.vm.synced_folder vagrant_dir, '/vagrant',
        :disabled => true

    config.vm.synced_folder vm_shared_dir, '/vagrant/vm_shared',
        :disabled => false,
        :nfs => true

    config.vm.synced_folder zerosim_workspace_dir, '/home/vagrant/0sim-workspace',
        :disabled => false,
        :nfs => true
  end
end
